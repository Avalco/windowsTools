/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class avalco_network_vpn_base_VirtualInternetFace */

#ifndef _Included_avalco_network_vpn_base_VirtualInternetFace
#define _Included_avalco_network_vpn_base_VirtualInternetFace
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     avalco_network_vpn_base_VirtualInternetFace
 * Method:    createIFace
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_avalco_network_vpn_base_VirtualInternetFace_createIFace
  (JNIEnv *, jobject, jstring);

/*
 * Class:     avalco_network_vpn_base_VirtualInternetFace
 * Method:    sendPackets
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_avalco_network_vpn_base_VirtualInternetFace_sendPackets
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     avalco_network_vpn_base_VirtualInternetFace
 * Method:    setIFaceConf
 * Signature: ([BI)V
 */
JNIEXPORT void JNICALL Java_avalco_network_vpn_base_VirtualInternetFace_setIFaceConf
  (JNIEnv *, jobject, jbyteArray, jint);

/*
 * Class:     avalco_network_vpn_base_VirtualInternetFace
 * Method:    addReceiveListener
 * Signature: (Lavalco/network/vpn/base/VirtualInternetFace/ReceiveListener;)V
 */
JNIEXPORT void JNICALL Java_avalco_network_vpn_base_VirtualInternetFace_addReceiveListener
  (JNIEnv *, jobject, jobject);

/*
 * Class:     avalco_network_vpn_base_VirtualInternetFace
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_avalco_network_vpn_base_VirtualInternetFace_close
  (JNIEnv *, jobject);

/*
 * Class:     avalco_network_vpn_base_VirtualInternetFace
 * Method:    test
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_avalco_network_vpn_base_VirtualInternetFace_test
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
